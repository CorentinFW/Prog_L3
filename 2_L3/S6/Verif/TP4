(*TP4*)
(*Exo 2*)
Check forall A: Type, A -> (A -> A) -> A.
Check( fun n :(forall F: Type,F->(F->F)->F) => n (forall F: Type,F->(F->F)->F)).

Set Universe Polymorphism.
Definition my_nat := forall A: Type, A -> (A -> A) -> A.
Check fun n : my_nat=>n my_nat.

(*Exo 4*)
Print nat.
Check nat_rec.


Definition double : nat->nat:= fun n : nat => nat_rec (fun n : nat=>nat) 0 (fun p a : nat => S (S n)) n.


Definition pred : nat->nat := fun n : nat=> nat_rec (fun n : nat=>nat) 0 (fun r v :nat => r) n.
Check (pred 4).