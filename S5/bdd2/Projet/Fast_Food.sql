/*pour supp les tables avant de les recréent */
/*
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE EMPRUNT';
EXCEPTION
 WHEN OTHERS THEN
	IF SQLCODE != -942 THEN
	RAISE;
END IF;
END;
/
*/

/*
1,1 je met dedans 
*/

BEGIN
EXECUTE IMMEDIATE 'DROP TABLE EST_DANS_MENU';
EXCEPTION
 WHEN OTHERS THEN
	IF SQLCODE != -942 THEN
	RAISE;
END IF;
END;
/
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE EST_DANS_PRODUIT';
EXCEPTION
 WHEN OTHERS THEN
	IF SQLCODE != -942 THEN
	RAISE;
END IF;
END;
/
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE CONTIENT';
EXCEPTION
 WHEN OTHERS THEN
	IF SQLCODE != -942 THEN
	RAISE;
END IF;
END;
/
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE DISPOSE_PRODUIT';
EXCEPTION
 WHEN OTHERS THEN
	IF SQLCODE != -942 THEN
	RAISE;
END IF;
END;
/
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE DISPOSE_MENU';
EXCEPTION
 WHEN OTHERS THEN
	IF SQLCODE != -942 THEN
	RAISE;
END IF;
END;
/
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE S_OCCUPE_DE';
EXCEPTION
 WHEN OTHERS THEN
	IF SQLCODE != -942 THEN
	RAISE;
END IF;
END;
/
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE PRODUIT';
EXCEPTION
 WHEN OTHERS THEN
	IF SQLCODE != -942 THEN
	RAISE;
END IF;
END;
/
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE MENU';
EXCEPTION
 WHEN OTHERS THEN
	IF SQLCODE != -942 THEN
	RAISE;
END IF;
END;
/
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE COMMANDE';
EXCEPTION
 WHEN OTHERS THEN
	IF SQLCODE != -942 THEN
	RAISE;
END IF;
END;
/
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE EMPLOYE';
EXCEPTION
 WHEN OTHERS THEN
	IF SQLCODE != -942 THEN
	RAISE;
END IF;
END;
/
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE CLIENT';
EXCEPTION
 WHEN OTHERS THEN
	IF SQLCODE != -942 THEN
	RAISE;
END IF;
END;
/
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE PERSONNE';
EXCEPTION
 WHEN OTHERS THEN
	IF SQLCODE != -942 THEN
	RAISE;
END IF;
END;
/
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE RESTAURANT';
EXCEPTION
 WHEN OTHERS THEN
	IF SQLCODE != -942 THEN
	RAISE;
END IF;
END;
/

ALTER session SET NLS_DATE_FORMAT='YYYY-MM-DD' ; 

CREATE TABLE RESTAURANT(
    IdResto INTEGER,
    Adresse VARCHAR(32),
    CodePostal INTEGER,
    Chaine VARCHAR(32),
    CONSTRAINT PK_RESTAU PRIMARY KEY(IdResto)
);

CREATE TABLE PERSONNE(
    IdPersonne INTEGER,
    Nom VARCHAR(32),
    Prenom VARCHAR(32),
    CONSTRAINT PK_PERSONNE PRIMARY KEY(IdPersonne)
);

CREATE TABLE CLIENT(
    IdClient INTEGER,
    Telephone VARCHAR(12),
    CONSTRAINT PK_CLIENT PRIMARY KEY(IdClient),
    CONSTRAINT FK_CLIENT FOREIGN KEY(IdClient) REFERENCES PERSONNE(IdPersonne) ON DELETE CASCADE
);

CREATE TABLE EMPLOYE(
    IdEmploye INTEGER,
    RoleEmploye VARCHAR(32),
    IdResto INTEGER,
    CONSTRAINT PK_EMPLOYE PRIMARY KEY(IdEmploye),
    CONSTRAINT FK_EMPLOYE_PERSONNE FOREIGN KEY(IdEmploye) REFERENCES PERSONNE(IdPersonne) ON DELETE CASCADE,
    CONSTRAINT FK_EMPLOYE_RESTAU FOREIGN KEY(IdResto) REFERENCES RESTAURANT(IdResto) ON DELETE CASCADE,
    CONSTRAINT EN_EMPLOYE_ROLE CHECK (RoleEmploye IN ('MANAGER', 'SERVEUR','PREPARATEUR', 'CUISINIER', 'DRIVE'))
);

CREATE TABLE COMMANDE(
    IdCommande INTEGER,
    TypePaiement VARCHAR(32),
    PrixTotal INTEGER,
    TypeCommande VARCHAR(32),
    IdResto INTEGER,
    DateCommande DATE,
    IdClient INTEGER,
    CONSTRAINT EN_PAIEMENT CHECK (TypePaiement IN ('CARTE','LIQUIDE','CHECK')),
    CONSTRAINT EN_TYPE_COMMANDE CHECK (TypeCommande IN ('PRESENTIEL','DRIVE','LIVRAISON','INTERNET')), 
    CONSTRAINT PK_COMMANDE PRIMARY KEY(IdCommande),
    CONSTRAINT FK_COMMANDE_RESTAU FOREIGN KEY(IdResto) REFERENCES RESTAURANT(IdResto) ON DELETE CASCADE,
    CONSTRAINT FK_COMMANDE_PERSONNE FOREIGN KEY(IdClient) REFERENCES CLIENT(IdClient) ON DELETE CASCADE
);

CREATE TABLE MENU(
    IdMenu INTEGER,
    Nom VARCHAR(32),
    Prix INTEGER,
    CONSTRAINT PK_MENU PRIMARY KEY(IdMenu)
);

CREATE TABLE PRODUIT(
    IdProduit INTEGER,
    Nom VARCHAR(32),
    TypeProduit VARCHAR(32),
    Prix INTEGER,
    QuantiteMax INTEGER,
    CONSTRAINT PK_PRODUIT PRIMARY KEY(IdProduit),
    CONSTRAINT EN_TYPE CHECK (TypeProduit IN ('PLAT','ACCOMPAGNEMENT','DESSERT','BOISSON')) 
);

CREATE TABLE S_OCCUPE_DE(
    IdCommande INTEGER,
    IdEmploye INTEGER,
    CONSTRAINT PK_S_OCCUPE_DE PRIMARY KEY(IdCommande,IdEmploye),
    CONSTRAINT FK_S_OCCUPE_DE_COMMANDE FOREIGN KEY(IdCommande) REFERENCES COMMANDE(IdCommande) ON DELETE CASCADE,
    CONSTRAINT FK_S_OCCUPE_DE_EMPLOYE FOREIGN KEY(IdEmploye) REFERENCES EMPLOYE(IdEmploye) ON DELETE CASCADE
);

CREATE TABLE DISPOSE_MENU(
    IdMenu INTEGER,
    IdResto INTEGER,
    CONSTRAINT PK_DISPOSE_MENU PRIMARY KEY(IdMenu,IdResto),
    CONSTRAINT FK_DISPOSE_MENU_MENU FOREIGN KEY(IdMenu) REFERENCES MENU(IdMenu) ON DELETE CASCADE,
    CONSTRAINT FK_DISPOSE_MENU_RESTAURANT FOREIGN KEY(IdResto) REFERENCES RESTAURANT(IdResto) ON DELETE CASCADE
);

CREATE TABLE DISPOSE_PRODUIT(
    IdResto INTEGER,
    IdProduit INTEGER,
    Quantite INTEGER,
    CONSTRAINT PK_DISPOSE_PRODUIT PRIMARY KEY(IdResto,IdProduit),
    CONSTRAINT FK_DISPOSE_PRODUIT_RESTAURANT FOREIGN KEY(IdResto) REFERENCES RESTAURANT(IdResto) ON DELETE CASCADE,
    CONSTRAINT FK_DISPOSE_PRODUIT_PRODUIT FOREIGN KEY(IdProduit) REFERENCES PRODUIT(IdProduit) ON DELETE CASCADE
);

CREATE TABLE CONTIENT(
    IdProduit INTEGER,
    IdMenu INTEGER,
    CONSTRAINT PK_CONTIENT PRIMARY KEY(IdProduit,IdMenu),
    CONSTRAINT FK_CONTIENT_PRODUIT FOREIGN KEY(IdProduit) REFERENCES PRODUIT(IdProduit) ON DELETE CASCADE,
    CONSTRAINT FK_CONTIENT_MENU FOREIGN KEY(IdMenu) REFERENCES MENU(IdMenu) ON DELETE CASCADE
);

CREATE TABLE EST_DANS_PRODUIT(
    IdCommande INTEGER,
    IdProduit INTEGER,
    QuantiteP INTEGER,
    CONSTRAINT PK_EST_DANS_PRODUIT PRIMARY KEY(IdCommande,IdProduit),
    CONSTRAINT FK_EST_DANS_PRODUIT_COMMANDE FOREIGN KEY(IdCommande) REFERENCES COMMANDE(IdCommande) ON DELETE CASCADE,
    CONSTRAINT FK_EST_DANS_PRODUIT_PRODUIT FOREIGN KEY(IdProduit) REFERENCES PRODUIT(IdProduit) ON DELETE CASCADE
);

CREATE TABLE EST_DANS_MENU(
    IdCommande INTEGER,
    IdMenu INTEGER,
    QuantiteM INTEGER,
    CONSTRAINT PK_EST_DANS_MENU PRIMARY KEY(IdCommande,IdMenu),
    CONSTRAINT FK_EST_DANS_MENU_COMMANDE FOREIGN KEY(IdCommande) REFERENCES COMMANDE(IdCommande) ON DELETE CASCADE,
    CONSTRAINT FK_EST_DANS_MENU_MENU FOREIGN KEY(IdMenu) REFERENCES MENU(IdMenu) ON DELETE CASCADE
);

--Vérifie si le role de l'employé correspond au type de commande, ce déclenche au moment des inserts--
CREATE TRIGGER ROLE_ATTRIBUATE_MENU
    BEFORE INSERT ON S_OCCUPE_DE
DECLARE
    ROLE_COMM VARCHAR(32)
    ROLE_EMPLOYE VARCHAR(32)
BEGIN
    ROLE_EMPLOYE := ''
    SELECT RoleEmploye INTO ROLE_EMPLOYE RoleEmploye FROM EMPLOYE WHERE EMPLOYE.IdEmploye = IdEmploye;
    ROLE_COMM := ''
    SELECT TypeCommande INTO ROLE_COMM FROM COMMANDE WHERE COMMANDE.IdCommande = IdCommande;
    IF (ROLE_EMPLOYE == 'DRIVE' AND ROLE_COMM == 'DRIVE') OR (ROLE_EMPLOYE == 'PREPARATEUR' AND ROLE_COMM != 'DRIVE')
    THEN RAISE_APPLICATION_ERROR(-1, 'Le role correspond pas au type de commande')
END IF;
END;

